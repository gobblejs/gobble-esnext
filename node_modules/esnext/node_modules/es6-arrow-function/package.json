{
  "name": "es6-arrow-function",
  "version": "0.3.1",
  "description": "Shorthand arrow functions compiled to ES5.",
  "main": "lib/index.js",
  "bin": {
    "es6-arrow-function": "bin/es6-arrow-function"
  },
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:square/es6-arrow-function.git"
  },
  "dependencies": {
    "esprima": "git://github.com/ariya/esprima.git#harmony",
    "recast": "~0.5.12",
    "through": "~2.3.4",
    "ast-util": "^0.0.5"
  },
  "devDependencies": {
    "example-runner": "0.1.0"
  },
  "scripts": {
    "test": "node test/runner.js"
  },
  "author": {
    "name": "Square, Inc."
  },
  "license": "Apache 2",
  "readme": "# es6-arrow-function\n\nCompiles JavaScript written using arrow functions to use ES5-compatible\nfunction syntax. For example, this:\n\n```js\n[1, 2, 3].map(n => n * 2);\n```\n\ncompiles to this:\n\n```js\n[1, 2, 3].map(function(n) { return n * 2; });\n```\n\nFor more information about the proposed syntax, see the [TC39 wiki page on\narrow functions](http://tc39wiki.calculist.org/es6/arrow-functions/).\n\n## Install\n\n```\n$ npm install es6-arrow-function\n```\n\n## Usage\n\n```js\n$ node\n> var compile = require('es6-arrow-function').compile;\n[Function]\n```\n\nWithout arguments:\n\n```js\n> compile('$(() => main());').code;\n'$(function() { return main(); });'\n```\n\nWith a single argument:\n\n```js\n> compile('[1, 2, 3].map(n => n * 2);').code;\n'[1, 2, 3].map(function(n) { return n * 2; });'\n```\n\nWith multiple arguments:\n\n```js\n> compile('[1, 2, 3].map((n, i) => n * i);').code;\n'[1, 2, 3].map(function(n, i) { return n * i; });'\n```\n\nIt binds the current context:\n\n```js\n> compile('stream.on(\"data\", d => this.data += d);').code;\n'stream.on(\"data\", (function(d) { return this.data += d; }).bind(this));'\n```\n\nOr work directly with the AST:\n\n```js\n$ cat ast.json\n{\n  \"type\": \"Program\",\n  \"body\": [\n    {\n      \"type\": \"ExpressionStatement\",\n      \"expression\": {\n        \"type\": \"CallExpression\",\n        \"callee\": {\n          \"type\": \"Identifier\",\n          \"name\": \"$\"\n        },\n        \"arguments\": [\n          {\n            \"type\": \"ArrowFunctionExpression\",\n            \"id\": null,\n            \"params\": [],\n            \"defaults\": [],\n            \"body\": {\n              \"type\": \"CallExpression\",\n              \"callee\": {\n                \"type\": \"Identifier\",\n                \"name\": \"main\"\n              },\n              \"arguments\": []\n            },\n            \"rest\": null,\n            \"generator\": false,\n            \"expression\": true\n          }\n        ]\n      }\n    }\n  ]\n}\n$ node\n> var transform = require('es6-arrow-function').transform;\n[Function]\n> console.log(JSON.stringify(transform(require('./ast.json')), null, 2));\n{\n  \"type\": \"Program\",\n  \"body\": [\n    {\n      \"type\": \"ExpressionStatement\",\n      \"expression\": {\n        \"type\": \"CallExpression\",\n        \"callee\": {\n          \"type\": \"Identifier\",\n          \"name\": \"$\"\n        },\n        \"arguments\": [\n          {\n            \"type\": \"FunctionExpression\",\n            \"id\": null,\n            \"params\": [],\n            \"defaults\": [],\n            \"body\": {\n              \"type\": \"BlockStatement\",\n              \"body\": [\n                {\n                  \"type\": \"ReturnStatement\",\n                  \"argument\": {\n                    \"type\": \"CallExpression\",\n                    \"callee\": {\n                      \"type\": \"Identifier\",\n                      \"name\": \"main\"\n                    },\n                    \"arguments\": []\n                  }\n                }\n              ]\n            },\n            \"rest\": null,\n            \"generator\": false,\n            \"expression\": false\n          }\n        ]\n      }\n    }\n  ]\n}\n```\n\n## Command line\n\nIf installing via `npm` a command line tool will be available called `es6-arrow-function`.\n\n```\n$ echo \"()=>123\" | es6-arrow-function\n(function () {\n  return 123;\n});\n```\n\n```\n$ es6-arrow-function $file\n(function () {\n  return 123;\n});\n```\n\n## Browserify\n\nBrowserify support is built in.\n\n```\n$ npm install es6-arrow-function  # install local dependency\n$ browserify -t es6-arrow-function $file\n// BOILERPLATE\n(function () {\n  return 123;\n});\n```\n\n## Contributing\n\n[![Build Status](https://travis-ci.org/square/es6-arrow-function.png?branch=master)](https://travis-ci.org/square/es6-arrow-function)\n\n### Setup\n\nFirst, install the development dependencies:\n\n```\n$ npm install\n```\n\nThen, try running the tests:\n\n```\n$ npm test\n```\n\n### Pull Requests\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\nAny contributors to the master es6-arrow-function repository must sign the\n[Individual Contributor License Agreement (CLA)][cla].  It's a short form that\ncovers our bases and makes sure you're eligible to contribute.\n\n[cla]: https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1\n\nWhen you have a change you'd like to see in the master repository, [send a pull\nrequest](https://github.com/square/es6-arrow-function/pulls). Before we merge\nyour request, we'll make sure you're in the list of people who have signed a\nCLA.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/square/es6-arrow-function/issues"
  },
  "homepage": "https://github.com/square/es6-arrow-function",
  "_id": "es6-arrow-function@0.3.1",
  "dist": {
    "shasum": "5c15f7cd8fba25bd79c8afb83e8cffb5c08e0a2b"
  },
  "_from": "es6-arrow-function@^0.3.1",
  "_resolved": "https://registry.npmjs.org/es6-arrow-function/-/es6-arrow-function-0.3.1.tgz"
}
